import { Router } from 'express'
import fetch from 'node-fetch'
import { env } from '../server/env.js'

const matchesRouter = Router()

const FOOTBALL_API = 'https://api.football-data.org/v4'

// ‚úÖ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–∞ –∫–ª—é—á–∞: —Å–Ω–∞—á–∞–ª–∞ FOOTBALL_API_TOKEN, –µ—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî FOOTBALL_DATA_KEY, –ø–æ—Ç–æ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á
const API_KEY = env.FOOTBALL_API_TOKEN || process.env.FOOTBALL_DATA_KEY || '563b1e8db9574057a9bae05e33cbbe85'

async function fetchFromFootball(endpoint: string): Promise<any> {
	if (!API_KEY) {
		throw new Error('Football API token not configured')
	}

	const res = await fetch(`${FOOTBALL_API}${endpoint}`, {
		headers: { 'X-Auth-Token': API_KEY },
	})

	if (!res.ok) {
		// –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ 429 (–ª–∏–º–∏—Ç), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
		if (res.status === 429) {
			console.warn('‚ö†Ô∏è Rate limit exceeded for football-data.org')
			return { matches: [] }
		}

		const errorText = await res.text()
		throw new Error(`football-data.org error: ${res.status} - ${errorText}`)
	}

	return res.json()
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∫–ª—é—á–∞
function getKeySource(): string {
	if (env.FOOTBALL_API_TOKEN) return 'FOOTBALL_API_TOKEN (env)'
	if (process.env.FOOTBALL_DATA_KEY) return 'FOOTBALL_DATA_KEY (env)'
	return '—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á'
}

matchesRouter.get('/', async (_req, res) => {
	try {
		console.log(`üîë –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á –∏–∑: ${getKeySource()}`)

		const data = await fetchFromFootball('/matches?status=SCHEDULED,TIMED&limit=20')
		res.json({
			matches: data.matches || [],
			_keySource: getKeySource(),
		})
	} catch (err: any) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Ç—á–µ–π:', err.message)
		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏ 500
		res.json({
			matches: [],
			_keySource: getKeySource(),
			error: err.message,
		})
	}
})

matchesRouter.get('/live', async (_req, res) => {
	try {
		console.log(`üîë –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á –∏–∑: ${getKeySource()}`)

		const data = await fetchFromFootball('/matches?status=IN_PLAY,PAUSED&limit=10')
		res.json({
			matches: data.matches || [],
			_keySource: getKeySource(),
		})
	} catch (err: any) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ LIVE –º–∞—Ç—á–µ–π:', err.message)
		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏ 500
		res.json({
			matches: [],
			_keySource: getKeySource(),
			error: err.message,
		})
	}
})

// –î–æ–±–∞–≤–∏–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–∞
matchesRouter.get('/debug', async (_req, res) => {
	try {
		const keySource = getKeySource()
		const hasKey = !!API_KEY
		const keyPreview = hasKey ? `${API_KEY.slice(0, 8)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
		const testData = await fetchFromFootball('/areas/2077') // –Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∞

		res.json({
			keyConfigured: hasKey,
			keySource,
			keyPreview,
			apiStatus: 'working',
			testArea: testData,
		})
	} catch (err: any) {
		const keySource = getKeySource()
		const hasKey = !!API_KEY
		const keyPreview = hasKey ? `${API_KEY.slice(0, 8)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

		res.json({
			keyConfigured: hasKey,
			keySource,
			keyPreview,
			apiStatus: 'error',
			error: err.message,
		})
	}
})

export default matchesRouter
